<?xml version="1.0" encoding="utf-8" ?>
<Application xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Siren.App"
             xmlns:icons="clr-namespace:Siren.Assets">
    <!--
        Define global resources and styles here, that apply to all pages in your app.
    -->
    <Application.Resources>
        <ResourceDictionary>
            <Color x:Key="TextColor">#FFFFFF</Color>

            <Color x:Key="VeryDark">#202225</Color>
            <Color x:Key="Dark">#2f3136</Color>
            <Color x:Key="Medium">#36393f</Color>
            <Color x:Key="Light">#40444b</Color>
            <Color x:Key="VeryLight">#b9bbbe</Color>

            <Color x:Key="Green">#CCFF66</Color>
            <Color x:Key="DarkGreen">#b0da5c</Color>
            <Color x:Key="Red">#E75A7C</Color>
            <Color x:Key="Blue">#6C91BF</Color>
            <Color x:Key="Orange">#F3D8C7</Color>
            
            <Color x:Key="Disabled">#77E75A7C</Color>

            <Style TargetType="Button">
                <Setter Property="TextColor" Value="{StaticResource TextColor}"></Setter>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Disabled">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Disabled}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
                <Setter Property="BackgroundColor" Value="{StaticResource Light}"></Setter>
            </Style>

            <Style TargetType="Grid">
                <Setter Property="RowSpacing" Value="0"></Setter>
                <Setter Property="ColumnSpacing" Value="0"></Setter>
            </Style>
            
            <Style TargetType="Label">
                <Setter Property="TextColor" Value="White"/>
                <Setter Property="LineBreakMode" Value="TailTruncation"/>
            </Style>

            <Style TargetType="Button" x:Key="DeleteButton">
                <Setter Property="CornerRadius" Value="3"/>
                <Setter Property="WidthRequest" Value="30"/>
                <Setter Property="HeightRequest" Value="30"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="FontFamily" Value="FA"/>
                <Setter Property="Text" Value="{x:Static icons:FAFont.CircleXmark}"/>
                <Setter Property="BackgroundColor" Value="{StaticResource Red}"/>
            </Style>

            <Style TargetType="Button" x:Key="EditButton" BasedOn="{StaticResource DeleteButton}">
                <Setter Property="Text" Value="{x:Static icons:FAFont.PenToSquare}"/>
                <Setter Property="BackgroundColor" Value="{StaticResource Blue}"/>
            </Style>

            <Style TargetType="Button" x:Key="EditAliasButton">
                <Setter Property="FontFamily" Value="FA"/>
                <Setter Property="Text" Value="{x:Static icons:FAFont.PenToSquare}"/>
                <Setter Property="BackgroundColor" Value="Transparent"/>
            </Style>

            <Style x:Key="PlayerControlButton" TargetType="Button">
                <Setter Property="HeightRequest" Value="50"/>
                <Setter Property="WidthRequest" Value="50"/>
                <Setter Property="CornerRadius" Value="25"/>
                <Setter Property="FontFamily" Value="FA"/>
                <Setter Property="FontSize" Value="26"/>
            </Style>

            <ControlTemplate x:Key="BusyPageTemplate">
                <RelativeLayout>
                    <Grid RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent,Property=Width}"
                          RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent,Property=Height}">
                        <ContentPresenter />
                        <BoxView BackgroundColor="Black" 
                             Opacity="0.7"
                             IsVisible="{TemplateBinding BindingContext.IsBusy}"/>
                        <ActivityIndicator Scale="1.3"  
                                       IsVisible="{TemplateBinding BindingContext.IsBusy}" 
                                       HorizontalOptions="Center"
                                       VerticalOptions="Center" 
                                       IsRunning="true" 
                                       Color="White"/>
                    </Grid>
                </RelativeLayout>
            </ControlTemplate>
        </ResourceDictionary>        
    </Application.Resources>
</Application>
